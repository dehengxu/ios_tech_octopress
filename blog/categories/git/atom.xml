<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Git | 逆风@[iOS,android,nil]]]></title>
  <link href="http://tech.dehengxu.com/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://tech.dehengxu.com/"/>
  <updated>2016-02-23T13:24:12+08:00</updated>
  <id>http://tech.dehengxu.com/</id>
  <author>
    <name><![CDATA[Deheng Xu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Git常见用法]]></title>
    <link href="http://tech.dehengxu.com/blog/gitchang-jian-yong-fa/"/>
    <updated>2015-08-21T13:52:39+08:00</updated>
    <id>http://tech.dehengxu.com/blog/gitchang-jian-yong-fa</id>
    <content type="html"><![CDATA[<h3>1.checkout</h3>

<h4>切换到指定 commit</h4>

<pre><code>checkout sha-1
</code></pre>

<h4>切换到分支</h4>

<pre><code>checkout branch_name
</code></pre>

<hr />

<h3>2.merge</h3>

<pre><code>   D--------E
  /
 /
A---B---C---F----G master
</code></pre>

<pre><code>git merge test
</code></pre>

<p>合并结果：</p>

<pre><code>   D-------------E
  /               \
 /                 \
A---B---C---F----G test, master
</code></pre>

<hr />

<h3>3.rebase</h3>

<pre><code>   D--------E
  /
 /
A---B---C---F----G master
</code></pre>

<pre><code>git rebase dev
</code></pre>

<pre><code>A---B---D---C---E---F----G  test, master
</code></pre>

<p>复位基线，将两个分支的提交纪录，合并到一条基线路线上。功能作用上和 merge 类似，但是不会产生新的提交节点，而且不存在多个提交路线。</p>

<p>当出现冲突的时候，先去解决冲突，完成后，使用 <code>rebase --continue</code> 继续 <code>rebase</code> 操作。如果冲突不重要也可以 <code>rebase --skip</code> 忽略冲突。</p>

<h3>3. diff</h3>

<p>git diff</p>

<p>查看当前未暂存的文件与已暂存的文件中不同的部分。</p>

<p>git diff &ndash;cached|&ndash;staged</p>

<p>查看已暂存的文件与已提交的文件中不同的部分。</p>

<h3>4. rm</h3>

<p>git rm &ndash;cached</p>

<p>将已暂存的文件从从暂存区中移除，但不删除文件</p>

<p>git rm</p>

<p>将文件从git 暂存区中移除，并且不再跟踪此文件，最后还需要提交此次删除操作。</p>

<h3>5. mv</h3>

<p>git mv 移动文件&amp;文件改名</p>

<p>git mv name1 name2 相当于执行了三条指令</p>

<pre><code>mv name1 name2
git rm name1
git add name2
</code></pre>

<h3>6. log</h3>

<p>git log 查看提交记录</p>

<p>git log &ndash;graph 按照图形的方式显示日志记录</p>

<p>git log &ndash;oneline 按照单行的简化方案显示日志记录</p>

<p>git log -p  展开显示每次提交的内容变更</p>

<p>git log -p &ndash;word-diff 以单词为目标观察内容变更</p>

<p>git log &ndash;stat  显示增改行数统计</p>

<h3>7. commit</h3>

<p>git commit &ndash;amend 修改并更新最后一次提交内容</p>

<blockquote><p>&ndash;amend 参数相当于给你修改最后一次提交的机会</p></blockquote>

<h3>8. reset</h3>

<p>git reset head <file>   取消暂存到 head 版本</p>

<h3>9. diff</h3>

<p>git diff</p>

<p>git diff target_branch_name</p>

<h3>10. bundle</h3>

<h4>打包</h4>

<p>git bundle create bundle_name HEAD branch_name</p>

<h4>解包</h4>

<p>git clone bundle_name folder_name</p>
]]></content>
  </entry>
  
</feed>
