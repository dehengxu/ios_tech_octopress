<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[逆风@[iOS,android,nil]]]></title>
  <link href="http://tech.dehengxu.com/atom.xml" rel="self"/>
  <link href="http://tech.dehengxu.com/"/>
  <updated>2016-02-23T15:33:30+08:00</updated>
  <id>http://tech.dehengxu.com/</id>
  <author>
    <name><![CDATA[Deheng Xu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Use Jenkins With "Self-Organizing Swarm Plug-in Modules"]]></title>
    <link href="http://tech.dehengxu.com/blog/use-jenkins-with-self-organizing-swarm-plug-in-modules/"/>
    <updated>2015-12-29T16:15:39+08:00</updated>
    <id>http://tech.dehengxu.com/blog/use-jenkins-with-self-organizing-swarm-plug-in-modules</id>
    <content type="html"><![CDATA[<p>使用 Jenkins 做 ci，如果你的编译服务器和 Jenkins 服务器是分离的，那么你需要通过设置成 从节点 让需要执行 ci 任务的机器被 Jenkins 管理。</p>

<p>Jenkins 自带有一个叫做 Self-Origanzing Swarm Plug-in Modules 的插件，可以完成服务器自管理工作。这和从服务器有区别的地方在于，从服务器的工作方式是 Jenkins 作为主服务器直接登录从服务器进行主动工作；而自管理模式则是在“从”服务器上运行一个服务反向搜寻 Jenkins 的服务，自己登记到 Jenkins 的从节点中。然后 Jenkins 就可以为它分配任务了。</p>

<p>可以到这个地址：<a href="http://maven.jenkins-ci.org/content/repositories/releases/org/jenkins-ci/plugins/swarm-client/">http://maven.jenkins-ci.org/content/repositories/releases/org/jenkins-ci/plugins/swarm-client/</a>  下载对应版本的swarm-client jar 包，如果想独立使用，可以直接下载 with-dependency.jar 的文件（自带所有依赖包）的版本。</p>

<p>启动 swarm-client 的脚本</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/usr/bin/env bash
</span><span class='line'>java -jar swarm-client-2.0-jar-with-dependencies.jar \
</span><span class='line'>-name MacMini-compiling-server \
</span><span class='line'>-username xxx \
</span><span class='line'>-password xxxxxxx \
</span><span class='line'>-master http://localhost:8080/</span></code></pre></td></tr></table></div></figure>


<p>这里的 <code>http://localhost:8080/</code> 可以改成你的 jenkins 服务器地址。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS Mapping Lib]]></title>
    <link href="http://tech.dehengxu.com/blog/ios-mapping-lib/"/>
    <updated>2015-12-03T23:26:40+08:00</updated>
    <id>http://tech.dehengxu.com/blog/ios-mapping-lib</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/kaizeiyimi/XLYMapping">https://github.com/kaizeiyimi/XLYMapping</a></p>

<p><a href="https://github.com/leverdeterre/SecureMappingKit">https://github.com/leverdeterre/SecureMappingKit</a></p>

<p><a href="http://dev.stanfy.com">http://dev.stanfy.com</a></p>

<p><a href="https://github.com/Ulianko/NSObject-MUJSONMapping">https://github.com/Ulianko/NSObject-MUJSONMapping</a></p>

<p><a href="https://github.com/PlusR/ManagedMappingObject">https://github.com/PlusR/ManagedMappingObject</a></p>

<p><a href="https://github.com/mkko/MOMapping">https://github.com/mkko/MOMapping</a></p>

<p><a href="http://github.com/jamztang/JTObjectMapping">http://github.com/jamztang/JTObjectMapping</a></p>

<p><a href="https://github.com/LoganWright/JSONMapping">https://github.com/LoganWright/JSONMapping</a></p>

<p><a href="https://github.com/jfwork">https://github.com/jfwork</a></p>

<p><a href="https://github.com/GyazSquare/GSFileTypeMappings">https://github.com/GyazSquare/GSFileTypeMappings</a></p>

<p><a href="https://github.com/Yalantis/FastEasyMapping">https://github.com/Yalantis/FastEasyMapping</a></p>

<p><a href="https://github.com/yfben/FOMapping">https://github.com/yfben/FOMapping</a></p>

<p><a href="https://github.com/Krivoblotsky/FMResultsMapping">https://github.com/Krivoblotsky/FMResultsMapping</a></p>

<p><a href="https://github.com/lucasmedeirosleite/EasyMapping">https://github.com/lucasmedeirosleite/EasyMapping</a></p>

<p><a href="https://github.com/Egeniq/EFDataMappingKit">https://github.com/Egeniq/EFDataMappingKit</a></p>

<p><a href="https://github.com/dreyhomedev/NSObject-DHNObjectMapping">https://github.com/dreyhomedev/NSObject-DHNObjectMapping</a></p>

<p><a href="https://github.com/dchohfi/KeyValueObjectMapping">https://github.com/dchohfi/KeyValueObjectMapping</a></p>

<p><a href="https://github.com/111minutes/BWObjectMapping">https://github.com/111minutes/BWObjectMapping</a></p>

<p><a href="https://github.com/kovalskiy/AZMapping">https://github.com/kovalskiy/AZMapping</a></p>

<p><a href="https://github.com/zarochintsev/AZEasyMapping">https://github.com/zarochintsev/AZEasyMapping</a></p>

<p><a href="https://github.com/JeanLebrument/APContact-EasyMapping">https://github.com/JeanLebrument/APContact-EasyMapping</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Web Protocol Collection]]></title>
    <link href="http://tech.dehengxu.com/blog/web-protocol-collection/"/>
    <updated>2015-12-01T10:42:15+08:00</updated>
    <id>http://tech.dehengxu.com/blog/web-protocol-collection</id>
    <content type="html"><![CDATA[<p><a href="https://www.ietf.org/rfc/rfc-index">rfc 文档</a></p>

<p><a href="https://www.ietf.org/rfc/rfc1945">HTTP 1.0</a></p>

<p><a href="https://www.ietf.org/rfc/rfc2068">HTTP 1.1</a></p>

<p><a href="https://www.ietf.org/rfc/rfc2069">An Extension to HTTP : Digest Access Authentication</a></p>

<p><a href="https://www.ietf.org/rfc/rfc2070">HTML</a></p>

<p><a href="https://www.ietf.org/rfc/rfc3875">CGI 1.1</a></p>

<p><a href="https://www.ietf.org/rfc/rfc2388">multipart/form-data</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[App Transport Security 技术]]></title>
    <link href="http://tech.dehengxu.com/blog/app-transport-security-ji-zhu/"/>
    <updated>2015-11-05T10:18:25+08:00</updated>
    <id>http://tech.dehengxu.com/blog/app-transport-security-ji-zhu</id>
    <content type="html"><![CDATA[<p>App Transport Security is a feature that improves the security of connections between an app and web services. The feature consists of default connection requirements that conform to best practices for secure connections. Apps can override this default behavior and turn off transport security.</p>

<p>Transport security is available in iOS 9.0 or later, and in OS X v10.11 and later.</p>

<h2>Default behavior</h2>

<p>All connections using the NSURLConnection, CFURL, or NSURLSession APIs use App Transport Security default behavior in apps built for iOS 9.0 or later, and OS X v10.11 or later. Connections that do not follow the requirements will fail. For more information on various the connection methods, see NSURLConnection Class Reference, CFURL Reference, or NSURLSession Class Reference.</p>

<p>Info.plist can use <code>NSAppTransportSecurity</code> key to configurate ATS</p>

<ul>
<li>NSAllowsArbitraryLoads   <code>Yes</code> to disable ATS checking, <code>No</code> to enable ATS checking.</li>
</ul>


<p>The property keys are defined next.</p>

<p>NSAppTransportSecurity
A dictionary containing the settings for overriding default App Transport Security behaviors. The top level key for the app’s Info.plist file.</p>

<p>NSAllowsArbitraryLoads
A Boolean value used to disable App Transport Security for any domains not listed in the NSExceptionDomains dictionary. Listed domains use the settings specified for that domain.</p>

<p>The default value of NO requires the default App Transport Security behavior for all connections.</p>

<p>NSExceptionDomains
A dictionary of App Transport Security exceptions for specific domains. Each key is a string containing the domain name for the exceptions.</p>

<p><domain-name-for-exception-as-string>
A dictionary of exceptions for the named domain. The name of the key is the name of the domain–for example, www.apple.com.</p>

<h4>NSExceptionMinimumTLSVersion</h4>

<p>A string that specifies a the minimum TLS version for connections. Valid values are:</p>

<pre><code>TLSv1.0
TLSv1.1
TLSv1.2
</code></pre>

<p><code>TLSV1.2</code> is the default value.</p>

<h4>NSExceptionRequiresForwardSecrecy</h4>

<p>A Boolean value for overriding the requirement that the domain support forward secrecy using ciphers.</p>

<p>YES is the default value and limits the ciphers to those shown in Default Behavior.</p>

<p>Setting the value to NO adds the following the list of accepted ciphers:</p>

<ul>
<li>TLS_RSA_WITH_AES_256_GCM_SHA384</li>
<li>TLS_RSA_WITH_AES_128_GCM_SHA256</li>
<li>TLS_RSA_WITH_AES_256_CBC_SHA256</li>
<li>TLS_RSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_RSA_WITH_AES_128_CBC_SHA256</li>
<li>TLS_RSA_WITH_AES_128_CBC_SHA</li>
</ul>


<h4>NSExceptionAllowsInsecureHTTPLoads</h4>

<p>A Boolean value for overriding the requirement that all connections use HTTPS. Use this key to access domains with no certificate, or with an error for a self-signed, expired, or hostname-mismatch certificate.</p>

<p>NO is the default value.</p>

<h4>NSIncludesSubdomains</h4>

<p>A Boolean value for applying the overrides to all subdomains of the top-level domain.</p>

<p>NO is the default value.</p>

<h4>NSThirdPartyExceptionMinimumTLSVersion</h4>

<p>A version of NSExceptionMinimumTLSVersion used when the domain is an app service that is not controlled by the developer.</p>

<h4>NSThirdPartyExceptionRequiresForwardSecrecy</h4>

<p>A version of NSExceptionRequiresForwardSecrecy used when the domain is an app service that is not controlled by the developer.</p>

<h4>NSThirdPartyExceptionAllowsInsecureHTTPLoads</h4>

<p>A version of NSExceptionAllowsInsecureHTTPLoads used when the domain is an app service that is not controlled by the developer.</p>

<p><a href="https://developer.apple.com/library/prerelease/ios/documentation/General/Reference/InfoPlistKeyReference/Introduction/Introduction.html#//apple_ref/doc/uid/TP40009248-SW1">Infomation Property List Key Reference</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android 常用第三方库]]></title>
    <link href="http://tech.dehengxu.com/blog/android-chang-yong-di-san-fang-ku/"/>
    <updated>2015-10-19T19:19:15+08:00</updated>
    <id>http://tech.dehengxu.com/blog/android-chang-yong-di-san-fang-ku</id>
    <content type="html"><![CDATA[<h2>AChartEngine</h2>

<blockquote><p>第三方图形库</p></blockquote>

<p><a href="http://www.achartengine.org/">http://www.achartengine.org/</a></p>

<h2>MPAndroidChart</h2>

<blockquote><p>多功能图形库</p></blockquote>

<p><a href="https://github.com/PhilJay/MPAndroidChart">https://github.com/PhilJay/MPAndroidChart</a></p>

<h2>EazeGraph</h2>

<blockquote><p>简单图形库</p></blockquote>

<p><a href="https://github.com/blackfizz/EazeGraph">https://github.com/blackfizz/EazeGraph</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MQTT Resources]]></title>
    <link href="http://tech.dehengxu.com/blog/mqtt-resources/"/>
    <updated>2015-10-12T14:05:57+08:00</updated>
    <id>http://tech.dehengxu.com/blog/mqtt-resources</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/mcollina/mosca/wiki/Mosca-as-a-standalone-service." target="_blank">mosca</a></p>

<p><a href="https://github.com/vbotnaru/mqtt" target="_blank">mqtt a nodejs client</a></p>

<p><a href="http://mosquitto.org/" target="_blank">mosquitto  MQTT server</a></p>

<p><a href="https://github.com/mqttjs/mqtt-server" target="_blank">mqtt-server</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用国内源提高Android SDK Manager 速度]]></title>
    <link href="http://tech.dehengxu.com/blog/shi-yong-guo-nei-yuan-ti-gao-android-sdk-manager-su-du/"/>
    <updated>2015-10-11T21:54:10+08:00</updated>
    <id>http://tech.dehengxu.com/blog/shi-yong-guo-nei-yuan-ti-gao-android-sdk-manager-su-du</id>
    <content type="html"><![CDATA[<h3>/etc/hosts</h3>

<p>mirrors.opencas.cn  dl.google.com
mirrors.opencas.cn  dl-ssl.google.com</p>

<h1>mirrors.neusoft.edu.cn dl.google.com</h1>

<h1>mirrors.neusoft.edu.cn dl-ssl.google.com</h1>

<h3>Android SDK Manager</h3>

<p>Keep bellow field empty</p>

<ol>
<li>Tools -> Options -> Http Proxy Server|Http Proxy Port</li>
<li>Managed Add-on Sites -> Official Add-on Sites (Disable All)</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第三方消息推送服务对比]]></title>
    <link href="http://tech.dehengxu.com/blog/di-san-fang-xiao-xi-tui-song-fu-wu-dui-bi/"/>
    <updated>2015-10-10T11:15:55+08:00</updated>
    <id>http://tech.dehengxu.com/blog/di-san-fang-xiao-xi-tui-song-fu-wu-dui-bi</id>
    <content type="html"><![CDATA[<h3>友盟</h3>

<p>客户端支持: iOS, Android</p>

<p>服务端支持: Java, php, Python</p>

<h3>极光</h3>

<p>客户端支持: iOS, Android, WinPhone</p>

<p>服务端支持: Java, php, python, ruby, C#, nodejs</p>

<h3>百度云推送</h3>

<p>客户端支持: iOS, Android</p>

<p>服务端支持: Java, php</p>

<h3>个推</h3>

<p><a href="http://www.getui.com/">http://www.getui.com/</a></p>

<p>客户端支持: iOS, Android</p>

<p>服务端支持: java, php, c#, python, nodejs, c++</p>

<h3>腾讯飞鸽</h3>

<p><a href="http://xg.qq.com/xg">http://xg.qq.com/xg</a></p>

<p>客户端支持: iOS, Android</p>

<p>服务端支持: Java, php, python, nodejs</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Diagram of a Activity's Life Cycle]]></title>
    <link href="http://tech.dehengxu.com/blog/diagram-of-a-activitys-life-cycle/"/>
    <updated>2015-10-05T11:31:52+08:00</updated>
    <id>http://tech.dehengxu.com/blog/diagram-of-a-activitys-life-cycle</id>
    <content type="html"><![CDATA[<p>A diagram present Activity&rsquo;s life cycle</p>

<p>Two Activity class named <code>A</code> and <code>B</code>, <code>A</code> is app entry.</p>

<p>Calling order is A call B , then B back to A.</p>

<p>1) Action: Launch App
  onCreate(A) -> onStart(A) -> onResume(A)</p>

<p>2) Action: startActivity(B)
  onPause(A) -> onCreate(B) -> onStart(B) -> onResume(B) -> onStop(A)</p>

<p>3) Action: goBack to Activity A
  onPause(B) -> onRestart(A) -> onStart(A) -> onResume(A) -> onStop(B) -> onDestory(B)</p>

<blockquote><p>If B has been hold, it would not be onDestory(B)</p></blockquote>

<p><img src="http://tech.dehengxu.com/images/refered/activity_life_cycle.png" alt="lifecycle" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bash Usage]]></title>
    <link href="http://tech.dehengxu.com/blog/bash-usage/"/>
    <updated>2015-09-22T09:48:42+08:00</updated>
    <id>http://tech.dehengxu.com/blog/bash-usage</id>
    <content type="html"><![CDATA[<h2>基础</h2>

<h3>变量定义</h3>

<p><code>var_name=var_value</code>，注意等号两边不能留下空格</p>

<h3>输入参数</h3>

<p>参数以空格分开分别是<code>$1</code>, <code>$2</code>, 到 <code>$9</code></p>

<h2>条件控制处理</h2>

<h3>if 语句</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>if [ condition1 ]; then
</span><span class='line'>
</span><span class='line'>elif [ condition2 ]; then
</span><span class='line'>
</span><span class='line'>else
</span><span class='line'>
</span><span class='line'>fi</span></code></pre></td></tr></table></div></figure>


<ol>
<li>方括号内的条件和方括号之间至少有一个空格的距离</li>
<li>每个方括号结束后通过<code>;</code>分隔</li>
<li>不论 <code>if</code>, <code>else</code> 还是 <code>elif</code>，除最后一个条件外，都需要以 <code>then</code> 结尾</li>
<li>最后以 <code>fi</code> 结尾。<code>fi</code> 是 <code>if</code> 的逆序写法，表示和<code>if</code>对应。</li>
</ol>


<h3>条件表达式</h3>

<ol>
<li><code>[ -z var_name ]</code>，变量是否为空字符串</li>
<li><code>[ -n var_name ]</code>，变量是否为空值</li>
</ol>


<h2>字符串处理</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   -eq   等于
</span><span class='line'>　　-ne    不等于
</span><span class='line'>　　-gt    大于
</span><span class='line'>　　-lt    小于
</span><span class='line'>　　-le    小于等于
</span><span class='line'>　　-ge   大于等于
</span><span class='line'>　　-z    空串
</span><span class='line'>　　=    两个字符相等
</span><span class='line'>　　!=    两个字符不等
</span><span class='line'>　　-n    非空串</span></code></pre></td></tr></table></div></figure>


<h2>文件，文件夹处理</h2>

<ol>
<li><code>if [ -d $path ];</code> 目录是否存在，反之 <code>if [ ! -d path ];</code> 目录是否不存在</li>
<li><code>if [ -f $file ];</code> 文件是否存在，同上 <code>if [ ! -f file ];</code></li>
<li><code>if [ -x $path ];</code> 是否有执行权限</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   –b 当file存在并且是块文件时返回真
</span><span class='line'>　　-c 当file存在并且是字符文件时返回真
</span><span class='line'>　　-d 当pathname存在并且是一个目录时返回真
</span><span class='line'>　　-e 当pathname指定的文件或目录存在时返回真
</span><span class='line'>　　-f 当file存在并且是正规文件时返回真
</span><span class='line'>　　-g 当由pathname指定的文件或目录存在并且设置了SGID位时返回为真
</span><span class='line'>　　-h 当file存在并且是符号链接文件时返回真，该选项在一些老系统上无效
</span><span class='line'>　　-k 当由pathname指定的文件或目录存在并且设置了“粘滞”位时返回真
</span><span class='line'>　　-p 当file存在并且是命令管道时返回为真
</span><span class='line'>　　-r 当由pathname指定的文件或目录存在并且可读时返回为真
</span><span class='line'>　　-s 当file存在文件大小大于0时返回真
</span><span class='line'>　　-u 当由pathname指定的文件或目录存在并且设置了SUID位时返回真
</span><span class='line'>　　-w 当由pathname指定的文件或目录存在并且可执行时返回真。一个目录为了它的内容被访问必然是可执行的。
</span><span class='line'>　　-o 当由pathname指定的文件或目录存在并且被子当前进程的有效用户ID所指定的用户拥有时返回真。</span></code></pre></td></tr></table></div></figure>


<h2>循环控制</h2>

<h2>数组</h2>

<ol>
<li>声明数组: <code>declare -a array_name</code></li>
<li>定义: <code>array_name=(value1 value2 value3)</code></li>
<li>内部指令:</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>${name[i]}: Use element i of array name. i can be any arithmetic expression as described under let.
</span><span class='line'>${name}: Use element 0 of array name.
</span><span class='line'>${name[*]}: Use all elements of array name.
</span><span class='line'>${name[@]}: Same as previous.
</span><span class='line'>${#name[*]}: Use the number of elements in array name.
</span><span class='line'>${#name[@]}: Same as previous.</span></code></pre></td></tr></table></div></figure>


<ol>
<li>关联数组: <code>array_name=([key1]=value1 [key2]=value2 [key3]=value3)</code></li>
</ol>


<h3>使用</h3>

<p>${array_name[0]}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Useful Tools for Xcode]]></title>
    <link href="http://tech.dehengxu.com/blog/useful-tools-for-xcode/"/>
    <updated>2015-09-16T11:15:21+08:00</updated>
    <id>http://tech.dehengxu.com/blog/useful-tools-for-xcode</id>
    <content type="html"><![CDATA[<h2>Tools</h2>

<h3>Cocoapods</h3>

<p><a href="http://cocoapods.org/">Cocoapods</a></p>

<blockquote><p>说到 iOS 中的以来管理系统就不得不说 Cocoapods 了，它不仅提供了依赖包的管理，更提供了对项目的自动化配置功能。是一个相当好用的工具，据我所知 支付宝，美团等各大公司都在使用之。安装方式为:<code>gem install cocoapods</code> ，使用方式为 <code>pods + 子命令</code>。需要有一定的 ruby 基础，gems 的使用经验。</p></blockquote>

<h3>Carthage</h3>

<p><a href="https://github.com/Carthage/Carthage">Carthage</a></p>

<blockquote><p>一个 Cocoa 上简单，分散的依赖管理工具</p></blockquote>

<h3>xcodeproj</h3>

<p><a href="http://www.rubydoc.info/gems/xcodeproj">xcodeproj</a></p>

<blockquote><p>一个可以编程操作 .xcodeproj 的gem</p></blockquote>

<h3>liftoff</h3>

<p><a href="https://github.com/thoughtbot/liftoff">liftoff</a></p>

<blockquote><p>CLI for creating and configuring new Xcode projects</p></blockquote>

<h3>OCUnit2JUnit</h3>

<p><a href="https://github.com/ciryon/OCUnit2JUnit">OCUnit2JUnit</a></p>

<blockquote><p>A script that converts output from OCUnit in xcodebuild to the XML format used by JUnit. This allows for XCode builds on continuos integration servers like Jenkins, complete with test reports!</p></blockquote>

<h3>cocoapods-repo-svn</h3>

<p><a href="https://github.com/clarkda/cocoapods-repo-svn">cocoapods-repo-svn</a></p>

<blockquote><p>svn support for cocoapods spec-repos</p></blockquote>

<h3>iOS-Framework</h3>

<p><a href="https://github.com/jverkoey/iOS-Framework">iOS-Framework</a></p>

<blockquote><p>How to create, develop, and distribute iOS Static Frameworks quickly and efficiently</p></blockquote>

<h3>Synx</h3>

<blockquote><p>A command line tool used for reform folder hierachy of Xcode, it can make a real folder for &lsquo;Group&rsquo; in Xcode project and make folder hierachy looks pretty.</p></blockquote>

<p>Usage:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>synx SomeProject.xcodeproj
</span></code></pre></td></tr></table></div></figure>


<h3>Dash</h3>

<blockquote><p>一个 OSX 上的开发文档工具，支持多种文档格式。可以到官网去找 <a href="https://kapeli.com/">https://kapeli.com/</a></p></blockquote>

<h3>Alfred</h3>

<blockquote><p>一个 OSX 上的效率工具，不多说了，google 下吧。</p></blockquote>

<p><a href="https://github.com/facebook/xctool">xctool</a></p>

<blockquote><p>A replacement for Apple&rsquo;s xcodebuild that makes it easier to build and test iOS or OSX apps.</p></blockquote>

<p><a href="https://github.com/facebook/origami">origami</a></p>

<blockquote><p>A Quartz Composer framework that enables interactive design prototyping without programming.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS 常用第三方库]]></title>
    <link href="http://tech.dehengxu.com/blog/ios-chang-yong-di-san-fang-ku/"/>
    <updated>2015-09-16T10:59:10+08:00</updated>
    <id>http://tech.dehengxu.com/blog/ios-chang-yong-di-san-fang-ku</id>
    <content type="html"><![CDATA[<h2>iOS UI</h2>

<p><a href="https://github.com/cjwirth/awesome-ios-ui">awesome-ios-ui</a></p>

<p><a href="https://github.com/fpt-software/Material-Controls-For-iOS">Google Material UI</a></p>

<p><a href="https://github.com/zhiyu/chartee">chartee</a></p>

<p><a href="https://github.com/core-plot/core-plot">Core-Plot 图形库</a></p>

<p><a href="https://github.com/dangfm/stockChart">股票图</a></p>

<p><a href="https://github.com/pepibumur/PPiAwesomeButton">PPiAwesomeButton</a></p>

<p><a href="https://github.com/mikeahmarani/MAConfirmButton">MAConfirmButton</a></p>

<p><a href="https://github.com/fastred/AHKBendableView">AHKBendableView</a></p>

<p><a href="https://github.com/facebook/pop">pop</a></p>

<blockquote><p>An extensible iOS and OS X animation library, useful for physics-based interactions.</p></blockquote>

<p><a href="https://github.com/SVGKit/SVGKit">SVGKit</a></p>

<blockquote><p>Display and interact with SVG Images on iOS / OS X, using native rendering (CoreAnimation)</p></blockquote>

<p><a href="https://github.com/mattgibbs/MGLinePlot">MGLinePlot</a></p>

<hr />

<h3>Serialization</h3>

<p><a href="https://github.com/azu/JSONAccelerator">JSONAccelerator</a></p>

<p><a href="https://github.com/PonyCui/PPJSONSerialization">PPJSONSerialization</a></p>

<blockquote><p>PPJSONSerialization is a Swift JSON Helper Library, it helps you to convert JSON string to Swift Class.</p></blockquote>

<p><a href="https://github.com/google/protobuf">Protobuf</a></p>

<p><a href="https://github.com/71squared/TBXML">TBXML</a></p>

<blockquote><p>JSON Accelerator helps developers from all programming language persuasions get data, verify it, and write model objects - Objective C, Java, or Python. It’s complexity, simplified.</p></blockquote>

<hr />

<h3>Database</h3>

<p><a href="https://github.com/gitdoapp/SugarRecord">SugarRecord</a></p>

<blockquote><p>CoreData management library written in Swift</p></blockquote>

<p><a href="https://github.com/paracycle/ObjectiveEntity">ObjectiveEntity</a></p>

<p><a href="https://github.com/hillegass/BNRPersistence">BNRPersistence</a></p>

<blockquote><p>A set of classes which use Tokyo Cabinet to save and load Objective-C objects</p></blockquote>

<p><a href="https://github.com/yapstudios/YapDatabase">YapDatabase</a></p>

<blockquote><p>YapDatabase is an extensible database for iOS &amp; Mac</p></blockquote>

<p><a href="https://github.com/ziminji/objective-c-sql-query-builder">objective-c-sql-query-builder</a></p>

<blockquote><p>An easy-to-use lightweight SQLite 3 library written in Objective-C for Mac OS and iOS 4+ that will build SQL statements and manage database connections, plus an active record based ORM.</p></blockquote>

<p><a href="https://github.com/cpjolicoeur/mojo-database">mojo-database</a></p>

<blockquote><p>ActiveRecord-like ORM interface for Sqlite in Objective-C for use in iOS applications.</p></blockquote>

<hr />

<h3>Testing</h3>

<p><a href="https://github.com/kif-framework/KIF">KIF</a></p>

<blockquote><p>Keep It Functional - An iOS Functional Testing Framework</p></blockquote>

<p><a href="https://github.com/icanzilb/MTLog">MTLog</a></p>

<blockquote><p>NSLog replacement for coders!</p></blockquote>

<p><a href="https://github.com/kiwi-bdd/Kiwi">Kiwi</a></p>

<blockquote><p>Simple BDD for iOS</p></blockquote>

<p><a href="https://github.com/pivotal/cedar">cedar</a></p>

<blockquote><p>BDD-style testing using Objective-C</p></blockquote>

<p><a href="https://github.com/jonreid/OCMockito">OCMockito</a></p>

<blockquote><p>Mockito for Objective-C: creation, verification and stubbing of mock objects</p></blockquote>

<p><a href="https://github.com/erikdoe/ocmock">ocmock</a></p>

<blockquote><p>Mock objects for Objective-C</p></blockquote>

<p><a href="https://github.com/mikr/RestartLessOften">RestartLessOften</a></p>

<blockquote><p>modify parameters, colors, images and code of your app without restart on iOS and OS X with Objective-C</p></blockquote>

<p><a href="https://github.com/DyCI/dyci-main">dyci-main</a></p>

<blockquote><p>Dynamic Code Injection Tool for Objective-C</p></blockquote>

<p><a href="https://github.com/johnno1962/Xtrace">Xtrace</a></p>

<blockquote><p>Trace Objective-C method calls by class or instance</p></blockquote>

<p><a href="https://github.com/johnno1962/XcodeColors">XcodeColors</a></p>

<blockquote><p>XcodeColors allows you to use colors in the Xcode debugging console. Fork with minor optimisation.</p></blockquote>

<p><a href="https://github.com/facebook/Tweaks">Tweaks</a></p>

<blockquote><p>An easy way to fine-tune, and adjust parameters for iOS apps in development.</p></blockquote>

<hr />

<h3>Network</h3>

<p><a href="https://github.com/RestKit/RestKit">RestKit</a></p>

<blockquote><p>RestKit is a framework for consuming and modeling RESTful web resources on iOS and OS X</p></blockquote>

<p><a href="https://github.com/twitter/CocoaSPDY">CocoaSPDY</a></p>

<blockquote><p>SPDY for iOS and OS X.  SPDY was originally designed at Google as an experimental successor to HTTP. It&rsquo;s a binary protocol (rather than human-readable, like HTTP), but is fully compatible with HTTP. In fact, current draft work on HTTP/2.0 is largely based on the SPDY protocol and its real-world success.</p></blockquote>

<p><a href="https://github.com/rnapier/RNCachingURLProtocol">RNCachingURLProtocol</a></p>

<blockquote><p>Simple offline caching for UIWebView and other NSURLConnection clients</p></blockquote>

<hr />

<h3>3rd Framework</h3>

<p><a href="https://github.com/real-prometheus/CDI">CDI</a></p>

<blockquote><p>Context and Dependency Injection for Objective-C.</p></blockquote>

<p><a href="https://github.com/tomekc/Syringe">Syringe</a></p>

<blockquote><p>Dependency injection framework for Objective-C (on iOS and OS X)</p></blockquote>

<p><a href="https://github.com/mivasi/Objective-IOC">Objective-IOC</a></p>

<blockquote><p>Dependency injection implementation for objective-c</p></blockquote>

<p><a href="https://github.com/tomersh/AppleGuice">AppleGuice</a></p>

<blockquote><p>Effortless dependency injection framework for Objective-C</p></blockquote>

<p><a href="https://github.com/alibaba/MBMvc">MBMvc</a></p>

<blockquote><p>An iOS Message Based MVC framework</p></blockquote>

<p><a href="https://github.com/facebook/KVOController">KVOController</a></p>

<blockquote><p>Simple, modern, thread-safe key-value observing for iOS and OS X.</p></blockquote>

<p><a href="https://github.com/johnno1962/injectionforxcode">injectionforxcode</a></p>

<blockquote><p>Runtime Code Injection for Objective-C &amp; Swift</p></blockquote>

<p><a href="https://github.com/robbiehanson/XMPPFramework">XMPPFramework</a></p>

<blockquote><p>An XMPP Framework in Objective-C for Mac and iOS</p></blockquote>

<p><a href="https://github.com/TouchCode/TouchHTTPD">TouchHTTPD</a></p>

<blockquote><p>An iOS compatible Cocoa Web Server.</p></blockquote>

<hr />

<h3>Utilities</h3>

<p><a href="https://github.com/thoughtbot/NSString-TBEncryption">NSString-TBEncryption</a></p>

<blockquote><p>Tiny CocoaPod for NSString Encryption methods</p></blockquote>

<p><a href="https://github.com/thoughtbot/TBMath">TBMath</a></p>

<blockquote><p>Objective-C math library written on top of accelerate.</p></blockquote>

<p><a href="https://github.com/log4cplus/log4cplus">log4cplus</a></p>

<p><a href="https://github.com/mmin18/WaxPatch">WaxPatch</a></p>

<p><a href="https://github.com/cloudwu/coroutine">coroutine</a></p>

<blockquote><p>A asymmetric coroutine library for C.</p></blockquote>

<p><a href="https://github.com/mattconnolly/ZipArchive">ZipArchive</a></p>

<p><a href="https://github.com/st3fan/ios-openssl">ios-openssl</a></p>

<p><a href="https://github.com/secondgear/SGKeychain">SGKeychain</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gitsh 的安装和使用]]></title>
    <link href="http://tech.dehengxu.com/blog/gitsh-de-an-zhuang-he-shi-yong/"/>
    <updated>2015-09-15T17:50:13+08:00</updated>
    <id>http://tech.dehengxu.com/blog/gitsh-de-an-zhuang-he-shi-yong</id>
    <content type="html"><![CDATA[<p>项目地址:  <a href="https://github.com/thoughtbot/gitsh">https://github.com/thoughtbot/gitsh</a></p>

<h3>前提：</h3>

<ol>
<li><p>需要安装 ruby 环境</p></li>
<li><p>安装 m4 编译工具</p></li>
</ol>


<h3>安装步骤：</h3>

<ol>
<li>下载项目</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone https://github.com/thoughtbot/gitsh.git</span></code></pre></td></tr></table></div></figure>


<ol>
<li>安装 gems</li>
</ol>


<p>国内用户可以修改  Gemfile 中的 <code>source 'https://rubygems.org'</code> 为 source &lsquo;<a href="http://ruby.taobao.org">http://ruby.taobao.org</a>&rsquo;</p>

<p>因为某些原因使用淘宝的 ruby gems 源可达性更有保障</p>

<p>执行  <code>bundle install</code></p>

<ol>
<li><p>执行 <code>./autogen.sh</code></p></li>
<li><p>配置环境</p></li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>export PATH="$PATH:/PROJECT/gitsh/bin"</span></code></pre></td></tr></table></div></figure>


<p>最后终于可以使用了</p>

<h3>使用</h3>

<p>任何位置输入 <code>gitsh</code> 会进入到 git 命令行环境中，最大的优点是，git 命令可以只输入子命令就可以了。</p>

<p>比如：<code>git branch</code> 可以改用 <code>branch</code>，就这么简单。</p>

<p>直接回车会提示当前文件的变化情况，一切都变得容易了很多。</p>

<p>如果不想使用 gitsh 也可以安装  <code>zsh</code> 命令行终端 <a href="http://www.zsh.org/">zsh</a>；再配合我的 <a href="https://github.com/xudeheng/gitbash">gitbash</a> 简易别名系统简化 git 命令，安装命令 <code>curl -sSL https://raw.githubusercontent.com/xudeheng/gitbash/master/install.sh | bash</code>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 Cocoapods 来管理基于 Svn 的子项目]]></title>
    <link href="http://tech.dehengxu.com/blog/shi-yong-cocoapods-lai-guan-li-ji-yu-svn-de-zi-xiang-mu/"/>
    <updated>2015-09-08T16:01:14+08:00</updated>
    <id>http://tech.dehengxu.com/blog/shi-yong-cocoapods-lai-guan-li-ji-yu-svn-de-zi-xiang-mu</id>
    <content type="html"><![CDATA[<p>首先，感谢 clarkda 为cocoapods 提供了这个 repo-svn 的 svn 支持插件。</p>

<p>根据 <a href="https://github.com/clarkda/cocoapods-repo-svn">https://github.com/clarkda/cocoapods-repo-svn</a> 上的说明</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>gem install cocoapods-repo-svn 来安装 repo-svn 插件。
</span><span class='line'>
</span><span class='line'>pod repo-svn add my-svn-repo http://svn-repo-url 添加你的私有 svn 项目仓库
</span><span class='line'>
</span><span class='line'>pod repo-svn update my-svn-repo 更新项目
</span><span class='line'>
</span><span class='line'>pod repo-svn remove my-svn-repo 删除项目
</span></code></pre></td></tr></table></div></figure>


<p>其实不添加项目也是可以的，需要为 svn 上的子项目添加 .podspec 文件，使项目可被 cocoapods 识别并管理，并为你自己的项目添加 Podfile 文件。</p>

<h4>第一步：为你用到的所有子项目，添加 podspec</h4>

<p><code>pod spec create my-svn-repo</code></p>

<p>编辑 libname.podspec 文件，主要设置好 s.source, s.source_files, s.exclude_files, s.framework, s.library 字段。</p>

<p>其中 <code>s.source</code> 的字段需要把地址改成 <code>:svn =&gt; "http://svnurl/"</code></p>

<h4>第二步：编辑 Podfiles</h4>

<p>加上 <code>pod 'my-svn-repo', :svn =&gt; "http://10.255.223.227:81/svn/readersdk/cppsdk/branches/2.2.1_buildReaderKit"</code></p>

<p>现在，就可以享受 cocoapods 为你的 svn 项目带来自动化配置管理了。</p>

<p><a href="http://www.dehengxu.com/%E4%BD%BF%E7%94%A8-cocoapods-%E6%9D%A5%E7%AE%A1%E7%90%86%E5%9F%BA%E4%BA%8E-svn-%E9%A1%B9%E7%9B%AE/">这里可以讨论一些问题</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Create a Private Pods]]></title>
    <link href="http://tech.dehengxu.com/blog/create-a-private-pods/"/>
    <updated>2015-08-31T22:20:30+08:00</updated>
    <id>http://tech.dehengxu.com/blog/create-a-private-pods</id>
    <content type="html"><![CDATA[<h3>1. 创建私有 Spec 仓库</h3>

<p>没必要 fork CocoaPods 的Spec 主仓库。你可以建立自己的仓库，也不用公开。</p>

<p>而且你也可以创建自己的私有本地仓库</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /opt/git
</span><span class='line'>mkdir Specs.git
</span><span class='line'>cd Specs.git
</span><span class='line'>git init --bare</span></code></pre></td></tr></table></div></figure>


<h3>2. 添加私有仓库到 CocoaPods 安装文件中</h3>

<p><code>pod repo add REPO_NAME SOURCE_URL</code></p>

<blockquote><p>如果你想检测是否安装成功，可以这样测试：</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd ~/.cocoapods/repos/REPO_NAME
</span><span class='line'>pod repo lint</span></code></pre></td></tr></table></div></figure>


<h3>3. 添加你的 podspec 到你自己的仓库</h3>

<p>pod repo push REPO_NAME SPEC_NAME.podspec</p>

<hr />

<p>最后，你需要在 podfile 文件中通过 <code>source</code> 指令来使用你自己的仓库：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>source 'YOUR_REPO_URL'</span></code></pre></td></tr></table></div></figure>


<p><a href="https://guides.cocoapods.org/making/private-cocoapods.html">REF</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use Cocoapods Publish Your Podspec]]></title>
    <link href="http://tech.dehengxu.com/blog/use-cocoapods-publish-your-podspec/"/>
    <updated>2015-08-31T22:10:34+08:00</updated>
    <id>http://tech.dehengxu.com/blog/use-cocoapods-publish-your-podspec</id>
    <content type="html"><![CDATA[<h3>创建 podspec</h3>

<p>pod spec create NAME</p>

<h3>补完 podspec 文件</h3>

<p>参考例子：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="no">Pod</span><span class="o">::</span><span class="no">Spec</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span><span class="n">spec</span><span class="o">|</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">name</span>             <span class="o">=</span> <span class="s1">&#39;Reachability&#39;</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">version</span>          <span class="o">=</span> <span class="s1">&#39;3.1.0&#39;</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">license</span>          <span class="o">=</span> <span class="p">{</span> <span class="ss">:type</span> <span class="o">=&gt;</span> <span class="s1">&#39;BSD&#39;</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">homepage</span>         <span class="o">=</span> <span class="s1">&#39;https://github.com/tonymillion/Reachability&#39;</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">authors</span>          <span class="o">=</span> <span class="p">{</span> <span class="s1">&#39;Tony Million&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;tonymillion@gmail.com&#39;</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">summary</span>          <span class="o">=</span> <span class="s1">&#39;ARC and GCD Compatible Reachability Class for iOS and OS X.&#39;</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">source</span>           <span class="o">=</span> <span class="p">{</span> <span class="ss">:git</span> <span class="o">=&gt;</span> <span class="s1">&#39;https://github.com/tonymillion/Reachability.git&#39;</span><span class="p">,</span> <span class="ss">:tag</span> <span class="o">=&gt;</span> <span class="s1">&#39;v3.1.0&#39;</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">source_files</span>     <span class="o">=</span> <span class="s1">&#39;Reachability.h,m&#39;</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">framework</span>        <span class="o">=</span> <span class="s1">&#39;SystemConfiguration&#39;</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">requires_arc</span>     <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://guides.cocoapods.org/making/specs-and-specs-repo.html">Offical Docs</a></p>

<h3>验证代码</h3>

<p><code>pod lib lint CoreDataEnvir.podspec</code></p>

<p>如果你将 source 路径设置为 git@github.com&hellip;..，会出现这种警告提示：<code>- WARN  | Git SSH URLs will NOT work for people behind firewalls configured to only allow HTTP, therefore HTTPS is preferred.</code>。将 source 地址设置为 <a href="https://github.com....">https://github.com....</a> 的形式，可以解决此问题。</p>

<h3>验证 podspec</h3>

<p><code>pod spec lint CoreDataEnvir.podspec</code></p>

<h3>注册 Cocoapods 会话</h3>

<p>为了保证与 Cocoapods 通信的合法性，需要在你的电脑上注册一个会话，方法如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Bash'><span class='line'>pod trunk register orta@cocoapods.org <span class="s1">&#39;Orta Therox&#39;</span> --description<span class="o">=</span><span class="s1">&#39;macbook air&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>执行完后，你的邮箱会收到一封激活邮件，点击其中的激活链接后，你的会话就算是合法了。</p>

<h3>提交你的 podspec</h3>

<p><code>pod trunk push CoreDataEnvir.podspec</code> 这条命令会把你的 podspec 提交到公共库中。</p>

<p>这个步骤第一次执行，会比较慢，做好相应准备，比如翻好墙，以防长时间无响应。</p>

<p>比如我最近提交的: CoreDataEnvir</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class='Bash'><span class='line'>pod trunk push CoreDataEnvir.podspec --verbose
</span><span class='line'>/usr/bin/git pull --ff-only
</span><span class='line'>    From https://github.com/CocoaPods/Specs
</span><span class='line'>        c812aae..c4e2a00  master     -&gt; origin/master
</span><span class='line'>    Updating c812aae..c4e2a00
</span><span class='line'>    Fast-forward
</span><span class='line'>    CocoaPods-version.yml                              <span class="p">|</span>    <span class="m">2</span> +-
</span><span class='line'>    .../1.5/1PasswordExtension.podspec.json            <span class="p">|</span>   <span class="m">37</span> +
</span><span class='line'>    .../1.1/ABFRealmMapView.podspec.json               <span class="p">|</span>   <span class="m">31</span> +
</span><span class='line'>    .../1.1/ABFRealmSearchViewController.podspec.json  <span class="p">|</span>   <span class="m">31</span> +
</span><span class='line'>...
</span><span class='line'>    Specs/wpxmlrpc/0.8.1/wpxmlrpc.podspec.json         <span class="p">|</span>   <span class="m">27</span> +
</span><span class='line'>    .../0.1.4/youtube-ios-player-helper.podspec.json   <span class="p">|</span>   <span class="m">35</span> +
</span><span class='line'>    .../0.2.2/youtube-parser.podspec.json              <span class="p">|</span>   <span class="m">20</span> +
</span><span class='line'>    Specs/yuntongxun/0.0.1/yuntongxun.podspec.json     <span class="p">|</span>   <span class="m">36</span> +
</span><span class='line'>    <span class="m">2832</span> files changed, <span class="m">118838</span> insertions<span class="o">(</span>+<span class="o">)</span>, <span class="m">323</span> deletions<span class="o">(</span>-<span class="o">)</span>
</span><span class='line'>    create mode <span class="m">100644</span> Specs/1PasswordExtension/1.5/1PasswordExtension
</span><span class='line'>    create mode <span class="m">100644</span> Specs/ABFRealmMapView/1.1/ABFRealmMapView.podsp
</span><span class='line'>    create mode <span class="m">100644</span> Specs/ABFRealmSearchViewController/1.1/ABFRealm
</span><span class='line'>    create mode <span class="m">100644</span> Specs/ABFRealmTableViewController/1.0/ABFRealmT
</span><span class='line'>    create mode <span class="m">100644</span> Specs/ABLoader/0.0.2/ABLoader.podspec.json
</span><span class='line'>...
</span><span class='line'>    create mode <span class="m">100644</span> Specs/tw10n/1.1.1/tw10n.podspec.json
</span><span class='line'>    create mode <span class="m">100644</span> Specs/twitter-text/1.13.0/twitter-text.podspec.json
</span><span class='line'>    create mode <span class="m">100644</span> Specs/wpxmlrpc/0.8.1/wpxmlrpc.podspec.json
</span><span class='line'>    create mode <span class="m">100644</span> Specs/youtube-ios-player-helper/0.1.4/youtube-ios-player-helper.podspec.json
</span><span class='line'>    create mode <span class="m">100644</span> Specs/youtube-parser/0.2.2/youtube-parser.podspec.json
</span><span class='line'>    create mode <span class="m">100644</span> Specs/yuntongxun/0.0.1/yuntongxun.podspec.json
</span><span class='line'>
</span><span class='line'> CocoaPods 0.39.0.beta.3 is available.
</span><span class='line'> To update use: <span class="sb">`</span>sudo gem install cocoapods --pre<span class="sb">`</span>
</span><span class='line'> <span class="o">[</span>!<span class="o">]</span> This is a <span class="nb">test </span>version we<span class="err">&#39;</span>d love you to try.
</span><span class='line'>
</span><span class='line'> For more information see http://blog.cocoapods.org
</span><span class='line'> and the CHANGELOG <span class="k">for</span> this version http://git.io/BaH8pQ.
</span><span class='line'>
</span><span class='line'> Validating podspec
</span><span class='line'>     CoreDataEnvir <span class="o">(</span>0.4<span class="o">)</span> - Analyzing on iOS platform.
</span><span class='line'>   Preparing
</span><span class='line'>
</span><span class='line'> Analyzing dependencies
</span><span class='line'>
</span><span class='line'> Fetching external sources
</span><span class='line'> -&gt; Fetching podspec <span class="k">for</span> <span class="sb">`</span>CoreDataEnvir<span class="sb">`</span> from <span class="sb">`</span>/Users/nicholasxu/Projects/iOS/XFramework/CoreDataEnvir/CoreDataEnvir.podspec<span class="sb">`</span>
</span><span class='line'>
</span><span class='line'> Resolving dependencies of
</span><span class='line'>
</span><span class='line'> Comparing resolved specification to the sandbox manifest
</span><span class='line'>   A CoreDataEnvir
</span><span class='line'>
</span><span class='line'> Downloading dependencies
</span><span class='line'>
</span><span class='line'> -&gt; Installing CoreDataEnvir <span class="o">(</span>0.4<span class="o">)</span>
</span><span class='line'>   &gt; Copying CoreDataEnvir from
</span><span class='line'>   <span class="sb">`</span>/Users/nicholasxu/Library/Caches/CocoaPods/Pods/External/CoreDataEnvir/25047baf5458c8928d40aa32eccec759-043e4<span class="sb">`</span> to
</span><span class='line'>   <span class="sb">`</span>../../../../../../private/var/folders/6r/flwjnj4x4wsb8wcbmjj88_z40000gn/T/CocoaPods/Lint/Pods/CoreDataEnvir<span class="sb">`</span>
</span><span class='line'>   - Running pre install hooks
</span></code></pre></td></tr></table></div></figure>


<p>经过了漫长的 Pods master specs 的下载过程，才开始进行库的验证过程，每一个 tag 都会验证，这个过程也很漫长，好在过去的每一个 tag 我都执行过验证。</p>

<blockquote><p>PS:如果需要提交到私有库，你需要执行 <code>pod trunk push CoreDataEnvir.podspec</code></p></blockquote>

<h3>如果你的验证阶段经常 failed，有两种解决办法：</h3>

<ol>
<li>解决所有的 warning, 配置好 podspec 文件。</li>
<li>在lint 后面增加一个参数 <code>--allow-warning</code>，为了看清楚出错的原因你也可以增加  <code>--verbose</code>。</li>
</ol>


<hr />

<p><a href="https://guides.cocoapods.org/making/getting-setup-with-trunk.html">Ref</a>
<a href="https://guides.cocoapods.org/syntax/podspec.html">podspec</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Runtime 在新版本 Xcode 中引起的编译错误，及解决方法]]></title>
    <link href="http://tech.dehengxu.com/blog/objc-msgsend-bian-yi-cuo-wu-de-jie-jue-fang-fa/"/>
    <updated>2015-08-30T12:13:22+08:00</updated>
    <id>http://tech.dehengxu.com/blog/objc-msgsend-bian-yi-cuo-wu-de-jie-jue-fang-fa</id>
    <content type="html"><![CDATA[<h2>objc_msgSend</h2>

<p>最近在 Xcode6.4 上编译一个老旧的库时，出现了运行时函数 <code>objc_msgSend</code> 的编译错误，提示:</p>

<p><code>Too many arguments to function call, excepted 0, have 7</code>，说函数不需要参数，却传入了7个参数。</p>

<p>原来是预编译指令的问题:</p>

<p>找到编译出错的那个库，选中 target -> Build Settings 搜索框中输入 <code>objc</code></p>

<p>定位到这里:</p>

<p><img src="http://tech.dehengxu.com/images/refered/runtime_msgsend_fix.png" alt="msgSend_fix" /></p>

<p>将 <code>Enable Strict Checking of objc_msgSend Calls</code>  字段设为 <code>NO</code></p>

<p>关闭 <code>objc_msgSend</code> 的严格调用检查。</p>

<h2>object->isa</h2>

<p>最近在 Xcode6.4 上编译依赖 JSONKit 的时候，对于 JSONKit 内部通过指针访问 <code>isa</code> 变量代码，引起编译错误，提示:</p>

<p><code>Assignment to Objective-C's isa is deprecated in favor of object_setClass()</code> 或者 <code>Assignment to Objective-C's isa is deprecated in favor of object_getClass()</code></p>

<p>如图:</p>

<p><img src="http://tech.dehengxu.com/images/refered/runtime_isa_error.png" alt="isa_err" /></p>

<p>解决办法：找到 JSONKit 项目 target -> Build Settings 搜索框中输入 <code>isa</code></p>

<p>定位到:</p>

<p><img src="http://tech.dehengxu.com/images/refered/runtime_isa_fix.png" alt="isa_err" /></p>

<p>修改为 <code>NO</code> 即可。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自定义类如何提供 KVC 兼容特性]]></title>
    <link href="http://tech.dehengxu.com/blog/zi-ding-yi-lei-ru-he-ti-gong-kvc-jian-rong-te-xing/"/>
    <updated>2015-08-29T15:10:33+08:00</updated>
    <id>http://tech.dehengxu.com/blog/zi-ding-yi-lei-ru-he-ti-gong-kvc-jian-rong-te-xing</id>
    <content type="html"><![CDATA[<h3>KVC 兼容性</h3>

<h4>对一的关系</h4>

<p>对于属性来说，附属值会存在一对一的关系，这就需要你的类拥有一下特征：</p>

<ul>
<li><p>实现 <code>-key</code>, <code>-is&lt;Key&gt;</code> 方法类，或者存在有一个叫 <code>key</code> 或者 <code>_key</code> 的实例对象。(显然，这是 getter 访问器的规则)。虽然 key 名字常常以小写字母开头，KVC 也支持 key名称以大写字母开头，例如：<code>URL</code>。</p></li>
<li><p>如果该属性是可以修改的，那么就应该实现 <code>-set&lt;Key&gt;:</code> 方法。PS:框架会自动寻找 <code>key</code> 或者 <code>_key</code>形式的变量来完成对应操作。</p></li>
<li><p>你的 <code>-set&lt;Key&gt;:</code> 实现方法不应该执行验证操作。</p></li>
<li><p>如果你需要验证 <code>key</code> 的话，你需要实现 <code>-validate&lt;key&gt;:error:</code> 的方法。</p></li>
</ul>


<h4>索引化的对多关系</h4>

<p>对于索引化的对多关系而言，KVC 兼容性需要你的类拥有这些特征：</p>

<ul>
<li><p>实现名为 <code>-&lt;key&gt;</code> 并返回数组的方法。</p></li>
<li><p>或者拥有一个名为 <code>key</code> 或 <code>_key</code> 的数组实例对象变量。</p></li>
<li><p>或者实现 <code>-countOf&lt;key&gt;</code> 方法，并且实现 <code>-objectIn&lt;key&gt;AtIndex:</code> 和 <code>-&lt;key&gt;AtIndexes:</code> 两个方法中的一个或所有方法。</p></li>
<li><p>你也能可选的实现 <code>-get&lt;key&gt;:range:</code> 方法来提高性能表现。</p></li>
</ul>


<p>对于可修改的索引化有序对多关系，KVC 兼容性也需要你的类提供这些特征：</p>

<ul>
<li><p>实现 <code>-insertObject:in&lt;key&gt;AtIndex:</code> 和 <code>-insert&lt;Key&gt;:atIndexex:</code> 中的一个或所有方法。</p></li>
<li><p>当然如果愿意，你可也可以实现 <code>-replaceObjectIn&lt;key&gt;AtIndex:withObject:</code> 或 <code>-replace&lt;key&gt;AtIndexes:with&lt;key&gt;:</code> 来提高性能表现。这仅仅是个可选项。 :)</p></li>
</ul>


<h4>无序的对多关系兼容性</h4>

<p>对于无序的对多关系来说，KVC 兼容性需要你的类提供这些特征：</p>

<ul>
<li><p>实现能返回集合的名为 <code>-&lt;key&gt;</code> 的方法。</p></li>
<li><p>或者包含一个名为 <code>key</code> 或 <code>_key</code> 的实例变量。</p></li>
<li><p>或者实现 <code>-countOf&lt;key&gt;</code>，<code>-enumeratorOf&lt;key&gt;</code> 和 <code>-memberOf&lt;key&gt;:</code> 方法。</p></li>
</ul>


<p>对于可变的无序对多关系而言，KVC 兼容性需要你的类也提供这些：</p>

<ul>
<li><p>实现方法 <code>-add&lt;key&gt;Object:</code> 或 <code>-add&lt;key&gt;:</code> 中的一个或所有。</p></li>
<li><p>实现方法 <code>-remove&lt;key&gt;Object:</code> 或 <code>-remove&lt;key&gt;:</code>中的一个或所有。</p></li>
<li><p>你也可以实现 <code>-intersect&lt;key&gt;:</code> 和 <code>-set&lt;key&gt;:</code> 来提高性能表现，不过这是个可选项，根据你面临的情况自己选择吧。</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 NSValue 封装任意结构体]]></title>
    <link href="http://tech.dehengxu.com/blog/shi-yong-nsvalue-feng-zhuang-ren-yi-jie-gou-ti/"/>
    <updated>2015-08-29T12:55:21+08:00</updated>
    <id>http://tech.dehengxu.com/blog/shi-yong-nsvalue-feng-zhuang-ren-yi-jie-gou-ti</id>
    <content type="html"><![CDATA[<h2>NSValue</h2>

<p>装包，拆包，分别用到 <code>value:withObjCType:</code> 和 <code>getValue:</code>两个方法。</p>

<p>第一个是通过 type 类型，将 value 封装成 NSValue 对象。</p>

<p>后者是通过 NSValue 对象，获取值型数据</p>

<p>假设有一个自定义结构体</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>struct Node {
</span><span class='line'>    struct Node *next;
</span><span class='line'>    char *name;
</span><span class='line'>    int age;
</span><span class='line'>};</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>struct Node *header = (struct Node *)malloc(sizeof(struct Node));
</span><span class='line'>header-&gt;name = "Nicholasxu";
</span><span class='line'>header-&gt;age = 89;    
</span><span class='line'>NSValue *value = [NSValue value:header withObjCType:@encode(struct Node)];</span></code></pre></td></tr></table></div></figure>


<p>通过 <code>@encode</code> 将C 类型转换成 Objective-C 能识别的 char * 形式。</p>

<p>解包方法如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>struct Node *chain = (struct Node *)malloc(sizeof(struct Node));
</span><span class='line'>[value getValue:chain];
</span><span class='line'>NSLog(@"%s", chain-&gt;name);
</span><span class='line'>NSLog(@"%s", chain-&gt;age);
</span></code></pre></td></tr></table></div></figure>


<p>先分配结构题内存 <code>chain</code>，再将数据解包出来，并填充 <code>chain</code> 的空间。</p>

<h3>内存布局</h3>

<p>上面的例子中，<code>value</code> 和 header 都是在堆上分配的空间并且 header 的内存和 value 内部的数据是同一个内存空间，要做好 header 的内存管理工作，否则会导致 value 无法访问内部数据(出现野指针)。而且 chain 的数据是从 value 中复制过来的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KVO 机制]]></title>
    <link href="http://tech.dehengxu.com/blog/kvo-ji-zhi/"/>
    <updated>2015-08-28T18:36:18+08:00</updated>
    <id>http://tech.dehengxu.com/blog/kvo-ji-zhi</id>
    <content type="html"><![CDATA[<h2>KVO : 键值观察 (Key-value observing)</h2>

<p>KVO 是一个允许一个对象直接接受来自另一个对象属性改变时发送的通知的机制。KVO 能成为应用内部重要的因素。它是采用了MVC设计模式的应用程序中对象间的一种通信模式。比如，你可以使用它来同步 view 和 controller 层中模型对象之间的状态。典型情况下，控制器对象观察模型对象，试图对象观察控制器对象或者模型对象。</p>

<blockquote><p>注意：虽然 UIKit 框架通常不支持 KVO，你仍然能够在自定义的对象中实现它，包括自定义的视图。</p></blockquote>

<p><img src="http://tech.dehengxu.com/images/refered/kvo.jpg" alt="kvo" /></p>

<p>使用 KVO，一个对象可以观察另一个对象的任意的属性，包括简单的附属值，对一的关系和对多的关系。一个对象能找出当前属性先前的值。对多关系的观察者被通告的内容不仅有类型的改变，也被告知哪个对象在改变中被调用。</p>

<p>作为一个通知机制，KVO 和 <code>NSNotification</code> 和 <code>NSNotificationCenter</code> 提供的机制类似，但是也有一些明显的不同。不同于中央对象来对所有注册为观察者的对象广播通知，当属性值的改变发生时，KVO 通知直接发送给观察对象。</p>

<h3>实现 KVO</h3>

<p>根类 <code>NSObject</code>，提供了基本的 KVO 实现，你很少需要重载它。因此所有的 Cocoa objects 都继承了 KVO 的能力。你必须按照这些步骤来接收某个属性的 KVO 通知。</p>

<ul>
<li><p>你必须确保被观察的类对于你想观察的属性是符合 KVO 规范。 KVO 兼容性需要被观察对象的类也是 KVO 兼容的，而且也允许为该属性自动发送观察者通知，或者手动实现该属性的 KVO 。</p></li>
<li><p>添加一个观察者到一个值会发生改变的对象。你可以通过调用 <code>addObserver:forKeyPath:optios:context:</code> 来达到这个目的。观察者是应用中的另一个对象。</p></li>
<li><p>在观察者对象中，实现方法 <code>observeValueForKeyPath:ofObject:change:context:</code> 。当被观察对象的属性值发生改变的时候这个方法会被调用。</p></li>
</ul>


<h3>KVO 是绑定(OS X)的必须部分</h3>

<p>Cocoa 绑定是一个允许你不用写一些胶水代码就能确保模型中的值和你应用程序中的视图层同步的 OS X 技术。通过 Interface Builder 检查器中，你就能在视图属性和一些数据之间建立起协调链接，“绑定”他们就像其中一个发生改变会在其他身上反映出来。KVO，和 KVC 还有 KVB 都是 Cocoa 绑定的基础技术。</p>

<h3>后话</h3>

<p><img src="http://tech.dehengxu.com/images/refered/kvo_proj_snap1.png" alt="KVO runtime" /></p>

<p>从上图可以看出 KVO 是一个同步调用过程通过 _NSSetObjectValueAndNotify 函数，在设置对象值的同时向观察对象发送变化通知，同时会通过 <code>NSKeyValueObservingOptions</code> 类型来区分 KVO 发生的类型，并在 <code>- (void)observeValueForKeyPath:(nullable NSString *)keyPath ofObject:(nullable id)object change:(nullable NSDictionary *)change context:(nullable void *)context</code> 的 change 字典对象中传递相关值的变化信息(old value, new value 等)。</p>

<p>同时需要注意的是观察者是通过弱引用方式加入到被观察对象中的，所以当不需要继续观察的时候，请使用<code>removeObserver:forKeyPath:</code> 移除不再需要的观察者以免引起运行时异常。</p>

<h3>前提文章</h3>

<p><a href="https://developer.apple.com/library/ios/documentation/General/Conceptual/DevPedia-CocoaCore/KeyValueCoding.html#//apple_ref/doc/uid/TP40008195-CH25-SW1">Key-value coding</a></p>

<h3>相关的文章</h3>

<p><a href="https://developer.apple.com/library/ios/documentation/General/Conceptual/DevPedia-CocoaCore/MVC.html#//apple_ref/doc/uid/TP40008195-CH32-SW1">Model-View-Controller</a></p>

<p><a href="https://developer.apple.com/library/ios/documentation/General/Conceptual/DevPedia-CocoaCore/DynamicBinding.html#//apple_ref/doc/uid/TP40008195-CH15-SW1">Dynamic binding</a></p>

<h3>权威论述</h3>

<p><a href="https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/KeyValueObserving/KeyValueObserving.html#//apple_ref/doc/uid/10000177i">Key-value Observing Programming Guide</a></p>

<hr />

<p><a href="https://developer.apple.com/library/ios/documentation/General/Conceptual/DevPedia-CocoaCore/KVO.html#//apple_ref/doc/uid/TP40008195-CH16-SW1">Ref</a></p>
]]></content>
  </entry>
  
</feed>
